[package]
name = "dgsp"
version = "0.1.0"
edition = "2021"

[dependencies]
aes = { version = "0.8.4" }
async-trait = { version = "0.1.83" }
pqcrypto-sphincsplus = { version = "0.7.0", features = ["serialization"] }
pqcrypto-traits = "0.3.5"
rand = { version = "0.8.5", features = ["std"] }
rayon = { version = "1.10.0" }
thiserror = { version = "2" }
zeroize = { version = "1.8.1", features = ["zeroize_derive"] }

bincode = { version = "1.3.3", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
serde-big-array = { version = "0.5.1", optional = true }
sha2 = { version = "0.10.8", optional = true }
sha3 = { version = "0.10.8", optional = true }
sled = { version = "0.34", optional = true }

[dev-dependencies]
criterion = { version = "0.5.1", features = ["async_futures"] }
tempfile = { version = "3.14" }
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

[profile.bench]
opt-level = 3
debug = false

[[bench]]
name = "dgsp_keygen"
harness = false

[[bench]]
name = "dgsp_join"
harness = false

[[bench]]
name = "dgsp_csr"
harness = false

[[bench]]
name = "dgsp_cert"
harness = false

[[bench]]
name = "dgsp_sign"
harness = false

[[bench]]
name = "dgsp_verify"
harness = false

[[bench]]
name = "dgsp_open"
harness = false

[[bench]]
name = "dgsp_revoke"
harness = false

[features]
in-disk = ["sled", "bincode", "serialization"]
in-memory = []
serialization = [
    "serde",
    "serde-big-array",
]
sphincs_sha2_128f = ["sha2"]
sphincs_sha2_128s = ["sha2"]
sphincs_sha2_192f = ["sha2"]
sphincs_sha2_192s = ["sha2"]
sphincs_sha2_256f = ["sha2"]
sphincs_sha2_256s = ["sha2"]
sphincs_shake_128f = ["sha3"]
sphincs_shake_128s = ["sha3"]
sphincs_shake_192f = ["sha3"]
sphincs_shake_192s = ["sha3"]
sphincs_shake_256f = ["sha3"]
sphincs_shake_256s = ["sha3"]

default = ["sphincs_shake_128f", "serialization", "in-disk", "in-memory"]